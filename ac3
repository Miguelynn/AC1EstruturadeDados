package main

import (
	"bufio"
	"fmt"
	"os"
)

type Contato struct {
	Nome  string
	Email string
}

func (c *Contato) AlterarEmail(novoEmail string) {
	c.Email = novoEmail
}

func main() {
	var contatos [5]Contato
	var opcao string

	leitor := bufio.NewReader(os.Stdin)

	fmt.Println("Lista de contatos!")
	for {
		fmt.Print("Digite (1) para adicionar, (2) para remover ou qualquer outra coisa para sair: ")
		fmt.Scanln(&opcao)

		switch opcao {
		case "1":
			contatos = adicionaContato(contatos, leitor)
		case "2":
			contatos = excluiContato(contatos)
		default:
			return
		}

		fmt.Println("Contatos:")
		listarContatos(contatos)
	}
}

func adicionaContato(contatos [5]Contato, leitor *bufio.Reader) [5]Contato {
	fmt.Print("Informe o nome do contato: ")
	nome, _ := leitor.ReadString('\n')
	fmt.Print("Informe o email do contato: ")
	email, _ := leitor.ReadString('\n')

	novoContato := Contato{
		Nome:  nome,
		Email: email,
	}

	for i := range contatos {
		if contatos[i].Nome == "" {
			contatos[i] = novoContato
			break
		}
	}

	return contatos
}

func excluiContato(contatos [5]Contato) [5]Contato {
	for i := len(contatos) - 1; i >= 0; i-- {
		if contatos[i].Nome != "" {
			contatos[i] = Contato{}
			break
		}
	}

	return contatos
}

func listarContatos(contatos [5]Contato) {
	for i, contato := range contatos {
		if contato.Nome != "" {
			fmt.Printf("Contato %d: Nome: %s, Email: %s\n", i+1, contato.Nome, contato.Email)
		}
	}
}
